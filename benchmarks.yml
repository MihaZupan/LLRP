imports:
  - https://raw.githubusercontent.com/dotnet/crank/main/src/Microsoft.Crank.Jobs.Bombardier/bombardier.yml

variables:
    path: /plaintext
    presetHeaders: plaintext
    serverScheme: http
    downstreamScheme: http
    serverProtocol: http
    downstreamProtocol: http
    httpclient: 0
    httpclient-httpcontext: 0
    yarp: 0

jobs:
  wrk:
    variables:
      serverPort: 8080

  bombardier:
    variables:
      transport: '{% if serverProtocol == "http2" %}http2{% else %}fasthttp{% endif %}'
      path: /plaintext
      serverPort: 8080

  downstream:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: main
      project: src/BenchmarksApps/TechEmpower/PlatformBenchmarks/PlatformBenchmarks.csproj
    readyStateText: Application started.
    arguments: '--urls {{downstreamScheme}}://*:8081 --Kestrel:EndpointDefaults:Protocols http1'
    framework: net7.0

  llrp:
    source:
      repository: https://github.com/MihaZupan/LLRP.git
      branchOrCommit: main
      project: LLRP/LLRP.csproj
    readyStateText: Application started.
    arguments: '--urls {{serverScheme}}://*:8080 --downstream {{downstreamScheme}}://{{downstreamAddress}}:8081 --httpclient {{httpclient}} --httpclient-httpcontext {{httpclient-httpcontext}} --yarp {{yarp}}'

  yarp:
    source:
      repository: https://github.com/microsoft/reverse-proxy.git
      branchOrCommit: main
      project: testassets/BenchmarkApp/BenchmarkApp.csproj
    readyStateText: Application started.
    arguments: '--urls {{serverScheme}}://*:8080 --clusterUrls {{downstreamScheme}}://{{downstreamAddress}}:8081'

  httpclientproxy:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: main
      project: src/BenchmarksApps/HttpClient/Proxy/Proxy.csproj
    readyStateText: Application started.
    arguments: '--urls {{serverScheme}}://*:8080 --baseUri {{downstreamScheme}}://{{downstreamAddress}}:8081'

  haproxy:
    source:
      Repository: https://github.com/aspnet/benchmarks.git
      BranchOrCommit: main
      DockerFile: docker/haproxy/haproxy.dockerfile
      DockerImageName: haproxy-reverseproxy
      DockerContextDirectory: docker/haproxy
    environmentVariables:
        DOWNSTREAM_ADDRESS: '{{downstreamAddress}}'
        DOWNSTREAM_PORT: '8081'
    port: 8080

  nginx:
    source:
      Repository: https://github.com/aspnet/benchmarks.git
      BranchOrCommit: main
      DockerFile: docker/nginx/nginx.dockerfile
      DockerImageName: nginx-reverseproxy
      DockerContextDirectory: docker/nginx
    environmentVariables:
        DOWNSTREAM_SCHEME: '{{downstreamScheme}}'
        DOWNSTREAM_ADDRESS: '{{downstreamAddress}}'
        DOWNSTREAM_PORT: '8081'
        WORKER_PROCESSES: '{{cores}}'
    buildArguments:
      - SERVER_SCHEME={{serverScheme}}
      - SERVER_PROTOCOL={{serverProtocol}}
    port: 8080

scenarios:
  llrp-llhttp:
    downstream:
      job: downstream
    application:
      job: llrp
    load:
      job: bombardier

  llrp-httpclient:
    downstream:
      job: downstream
    application:
      job: llrp
      variables:
        httpclient: 1
    load:
      job: bombardier

  httpclientproxy:
    downstream:
      job: downstream
    application:
      job: httpclientproxy
    load:
      job: bombardier

  yarp:
    downstream:
      job: downstream
    application:
      job: yarp
    load:
      job: bombardier

  llrp-yarp:
    downstream:
      job: downstream
    application:
      job: llrp
      variables:
        yarp: 1
    load:
      job: bombardier

  llrp-httpclientwithcontext:
    downstream:
      job: downstream
    application:
      job: llrp
      variables:
        httpclient-httpcontext: 1
    load:
      job: bombardier

  haproxy:
    downstream:
      job: downstream
    application:
      job: haproxy
    load:
      job: bombardier

  nginx:
    downstream:
      job: downstream
    application:
      job: nginx
    load:
      job: bombardier

profiles:
  aspnet-perf-lin:
    variables:
      serverAddress: 10.0.0.102
      downstreamAddress: 10.0.0.103
      cores: 12
    jobs:
      downstream:
        endpoints: 
          - http://asp-perf-db:5001
      application:
        endpoints: 
          - http://asp-perf-lin:5001
      load:
        endpoints: 
          - http://asp-perf-load:5001
        options:
          displayOutput: true

  aspnet-perf-win:
    variables:
      serverAddress: 10.0.0.110
      downstreamAddress: 10.0.0.104
      cores: 12
    jobs:
      downstream:
        endpoints: 
          - http://asp-perf-load:5001
      application:
        endpoints: 
          - http://asp-perf-win:5001
      load:
        endpoints: 
          - http://asp-perf-db:5001

  aspnet-citrine-lin:
    variables:
      serverAddress: 10.0.0.102
      downstreamAddress: 10.0.0.103
      cores: 28
    jobs: 
      downstream:
        endpoints: 
          - http://asp-citrine-db:5001
      application:
        endpoints: 
          - http://asp-citrine-lin:5001
      load:
        endpoints: 
          - http://asp-citrine-load:5001

  aspnet-citrine-win:
    variables:
      serverAddress: 10.0.0.104
      downstreamAddress: 10.0.0.105
      cores: 28
    jobs:
      downstream:
        endpoints: 
          - http://asp-citrine-load:5001
      application:
        endpoints: 
          - http://asp-citrine-win:5001
      load:
        endpoints: 
          - http://asp-citrine-db:5001

  aspnet-citrine-amd:
    variables:
      serverAddress: 10.0.0.106
      downstreamAddress: 10.0.0.102
      cores: 48
    jobs:
      downstream:
        endpoints: 
          - http://asp-citrine-lin:5001
      application:
        endpoints: 
          - http://asp-citrine-amd:5001
      load:
        endpoints: 
          - http://asp-citrine-load:5001

  aspnet-citrine-amd-dest:
    variables:
      serverAddress: 10.0.0.102
      downstreamAddress: 10.0.0.106
      cores: 28
    jobs:
      downstream:
        endpoints: 
          - http://asp-citrine-amd:5001
      application:
        endpoints: 
          - http://asp-citrine-lin:5001
      load:
        endpoints: 
          - http://asp-citrine-load:5001

  local:
    variables:
      serverAddress: localhost
      downstreamAddress: localhost
    jobs: 
      downstream:
        endpoints: 
          - http://localhost:5010
      application:
        endpoints: 
          - http://localhost:5010
      load:
        endpoints: 
          - http://localhost:5010
